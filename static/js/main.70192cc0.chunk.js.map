{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","changeHandler","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","editTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","deleteTodo","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA0CeA,MAxCf,SAAkBC,GAChB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IASMC,EAAgB,SAACC,GACrBP,EAASO,EAAEC,OAAOV,QAGpB,OACE,8BACE,sBAAMW,UAAU,YAAYC,SAfV,SAACH,GACrBA,EAAEI,iBACFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAERC,EAAS,KASP,SACGL,EAAME,KACL,qCACE,uBAAOoB,KAAK,OAAOR,UAAU,kBAAkBS,YAAY,oFAAmBpB,MAAOC,EAAOoB,KAAK,OAAOC,SAAUd,EAAee,IAAKpB,IACtI,wBAAQQ,UAAU,mBAAlB,6BAGF,qCACE,uBAAOQ,KAAK,OAAOR,UAAU,aAAaS,YAAY,uEAAgBpB,MAAOC,EAAOoB,KAAK,OAAOC,SAAUd,EAAee,IAAKpB,IAC9H,wBAAQQ,UAAU,cAAlB,kCCEGa,MA/Bf,YAA4D,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,SAC9C,EAAwB9B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAFT,mBAAOD,EAAP,KAAa8B,EAAb,KAaA,OAAG9B,EAAKe,GACC,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATZ,SAACZ,GAClB4B,EAAS7B,EAAKe,GAAId,GAClB6B,EAAQ,CACNf,GAAI,KACJd,MAAO,QAQJyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,UACE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKH,UAAU,aAAf,UACE,cAAC,IAAD,CAAmBuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAAKH,UAAU,gBACjE,cAAC,IAAD,CAAQuB,QAAS,kBAAML,EAAQ,CAACf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAAQP,UAAU,mBANNqB,OCsB9DG,MA1Cf,WACE,MAA0BrC,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcW,EAAd,KAgCA,OACE,gCACE,oBAAIzB,UAAU,aAAd,iEACA,cAAC,EAAD,CAAUC,SAjCE,SAACmB,GACf,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAGA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAC3BW,EAASE,OA6BP,cAAC,EAAD,CAAMb,MAAOA,EAAOC,aA1BH,SAACZ,GACpB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAI3B,OAHGA,EAAKjB,KAAOA,IACbiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAmByCZ,WAhBjC,SAACb,GAClB,IAAM0B,EAAa,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,KAAOA,KACzDsB,EAASI,IAciEZ,SAX3D,SAACc,EAAQC,GACpBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAG3CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCtBxDC,MARf,WACE,OACE,qBAAKnC,UAAU,OAAf,SACE,cAAC,EAAD,OCHNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.70192cc0.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  });\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"todo_form\" onSubmit={submitHandler}>\r\n        {props.edit ? (\r\n          <>\r\n            <input type=\"text\" className=\"todo_input edit\" placeholder=\"üìåÌï† ÏùºÏùÑ Îã§Ïãú ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî\" value={input} name=\"text\" onChange={changeHandler} ref={inputRef}></input>\r\n            <button className=\"todo_button edit\">ÏàòÏ†ï</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <input type=\"text\" className=\"todo_input\" placeholder=\"üìåÌï† ÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî\" value={input} name=\"text\" onChange={changeHandler} ref={inputRef}></input>\r\n            <button className=\"todo_button\">Ï∂îÍ∞Ä</button>\r\n          </>\r\n        )}\r\n      </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TodoForm;\r\n","import React, { useState } from 'react';\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, editTodo}) {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitEdit = (value) => {\r\n    editTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if(edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitEdit}></TodoForm>;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div className={todo.isComplete ? \"todo_row complete\" : \"todo_row\"} key={index}>\r\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"todo-icons\">\r\n        <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className=\"delete_icon\" />\r\n        <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})} className=\"edit_icon\" />\r\n      </div>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useState } from 'react';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = (todo) => {\r\n    if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n      return;\r\n    } \r\n    const newTodos = [todo, ...todos];\r\n    setTodos(newTodos);\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if(todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const deleteTodo = [...todos].filter(todo => todo.id !== id);\r\n    setTodos(deleteTodo);\r\n  };\r\n\r\n  const editTodo = (todoId, newValue) => {\r\n    if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    } \r\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"todo_title\">Ïò§ÎäòÏùò Ìï† ÏùºÏùÄ?üéµ</h3>\r\n      <TodoForm onSubmit={addTodo}></TodoForm>\r\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} editTodo={editTodo}></Todo>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo\">\n      <TodoList></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}